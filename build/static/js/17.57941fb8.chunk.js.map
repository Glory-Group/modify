{"version":3,"sources":["views/main/text/addText/addText.tsx"],"names":["AddText","__WEBPACK_IMPORTED_MODULE_2_antd__","RangePicker","_super","props","_this","call","this","state","examTypeOptions","exam_id","subjectListOptions","subject_id","number","startValue","__WEBPACK_IMPORTED_MODULE_4_moment___default","startOf","endValue","endOpen","handleSubmit","e","preventDefault","form","validateFields","err","values","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","_a","title","start_time","format","end_time","params","text","createTextAction","_b","sent","code","history","push","getExamType","question","getType","result","examTypeList_1","data","map","item","index","value","exam_name","label","id","key","setState","onChangeExamType","getSubject","subjectList_1","subject_text","onChangeSubjectType","onChangeNum","disabledStartDate","valueOf","disabledEndDate","onChange","field","onStartChange","onEndChange","handleStartOpenChange","open","handleEndOpenChange","prototype","render","getFieldDecorator","__WEBPACK_IMPORTED_MODULE_1_react__","className","onSubmit","Item","validateTrigger","rules","required","message","placeholder","style","width","display","marginTop","options","min","max","defaultValue","disabledDate","showTime","onOpenChange","type","htmlType","__WEBPACK_IMPORTED_MODULE_3_mobx_react__","__webpack_exports__","create","name"],"mappings":"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","file":"static/js/17.57941fb8.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Form, Input, Cascader, InputNumber, Button, DatePicker } from 'antd';\r\nimport { observer, inject } from \"mobx-react\";\r\nimport moment from \"moment\"\r\n\r\nconst { RangePicker } = DatePicker;\r\ninterface propsInfo {\r\n    form: any,\r\n    question: any,\r\n    text:any,\r\n    history:any\r\n\r\n}\r\n@inject(\"question\", \"login\",\"text\")\r\n@observer\r\nexport class AddText extends React.Component<propsInfo> {\r\n    state = {\r\n        examTypeOptions: [],\r\n        exam_id: \"\",//考试类型id\r\n        subjectListOptions: [],\r\n        subject_id: \"\",//课程id\r\n        number: 4,\r\n        startValue: moment().startOf('day'),\r\n        endValue: moment().startOf('day'),\r\n        endOpen: false,\r\n    }\r\n    constructor(props: propsInfo) {\r\n        super(props)\r\n        this.getExamType()\r\n        this.getSubject()\r\n\r\n    }\r\n    //点击创建试卷\r\n    handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err: Error, values: any) => {\r\n            if (!err) {\r\n                let {exam_id,subject_id,number,startValue,endValue}=this.state\r\n                let {title}=values\r\n                //将moment格式转为时间戳\r\n                let start_time=+moment(startValue).format('x')\r\n                let end_time=+moment(endValue).format('x')\r\n                let params={\r\n                    subject_id,exam_id,title,number,start_time,end_time\r\n                }\r\n                let result=await this.props.text.createTextAction(params)\r\n                if(result.code===1){\r\n                    this.props.history.push(\"/main/text/createTextPaper\")\r\n                }\r\n            }\r\n        });\r\n    };\r\n    //获取所有考试类型\r\n    getExamType = async () => {\r\n        let result = await this.props.question.getType()\r\n        if (result.code === 1) {\r\n            let examTypeList: any = []\r\n            result.data.map((item: any, index: number) => {\r\n                examTypeList.push({ value: item.exam_name, label: item.exam_name, id: item.exam_id, key: item.exam_id })\r\n                return examTypeList\r\n            })\r\n            this.setState({\r\n                examTypeOptions: examTypeList\r\n            })\r\n        }\r\n    }\r\n    onChangeExamType = (value: any, item: any) => {\r\n        this.setState({\r\n            exam_id: item[0].id\r\n        })\r\n    }\r\n    //获取所有课程\r\n    getSubject = async () => {\r\n        let result = await this.props.question.getSubject()\r\n        if (result.code === 1) {\r\n            let subjectList: any = []\r\n            result.data.map((item: any, index: number) => {\r\n                subjectList.push({ value: item.subject_text, label: item.subject_text, id: item.subject_id, key: item.subject_id })\r\n                return subjectList\r\n            })\r\n            this.setState({\r\n                subjectListOptions: subjectList\r\n            })\r\n        }\r\n\r\n    }\r\n    onChangeSubjectType = (value: any, item: any) => {\r\n        this.setState({\r\n            subject_id: item[0].id\r\n        })\r\n    }\r\n    onChangeNum = (value: number) => {\r\n        this.setState({\r\n            number: value\r\n        })\r\n    }\r\n    disabledStartDate = (startValue: any) => {\r\n        const { endValue } = this.state;\r\n        if (!startValue || !endValue) {\r\n            return false;\r\n        }\r\n        return startValue.valueOf() > endValue.valueOf();\r\n    };\r\n\r\n    disabledEndDate = (endValue: any) => {\r\n        const { startValue } = this.state;\r\n        if (!endValue || !startValue) {\r\n            return false;\r\n        }\r\n        return endValue.valueOf() <= startValue.valueOf();\r\n    };\r\n\r\n    onChange = (field: any, value: any) => {\r\n        this.setState({\r\n            [field]: value,\r\n        });\r\n    };\r\n\r\n    onStartChange = (value: any) => {\r\n        this.onChange('startValue', value);\r\n    };\r\n\r\n    onEndChange = (value: any) => {\r\n        this.onChange('endValue', value);\r\n    };\r\n\r\n    handleStartOpenChange = (open: any) => {\r\n        if (!open) {\r\n            this.setState({ endOpen: true });\r\n        }\r\n    };\r\n\r\n    handleEndOpenChange = (open: any) => {\r\n        this.setState({ endOpen: open });\r\n    };\r\n    public render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { examTypeOptions, subjectListOptions, startValue, endValue, endOpen } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"title\">\r\n                    添加考试\r\n               </div>\r\n                <div className=\"content-box\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form content-box\">\r\n                        <Form.Item className=\"login-form-stem\">\r\n                            <span>试卷名称</span>\r\n                            {getFieldDecorator('title', {\r\n                                validateTrigger: \"onBlur\",\r\n                                rules: [{ required: true, message: 'Please input text title!' }]\r\n                            })(\r\n                                <Input\r\n                                    placeholder=\"请输入试卷名称\"\r\n                                    style={{ width: \"500px\", display: \"block\", marginTop: \"10px\" }}\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item className=\"login-form-stem\" style={{ width: \"176px\" }}>\r\n                            <span>选择考试类型</span>\r\n\r\n                            <Cascader options={examTypeOptions} onChange={this.onChangeExamType} placeholder=\"选择考试类型\" />\r\n                        </Form.Item>\r\n                        <Form.Item className=\"login-form-stem\" style={{ width: \"176px\" }}>\r\n                            <span>请选择课程类型</span>\r\n\r\n                            <Cascader options={subjectListOptions} onChange={this.onChangeSubjectType} placeholder=\"选择课程类型\" />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <span>设置题量</span>\r\n                            <InputNumber min={3} max={10} defaultValue={3}\r\n                                onChange={this.onChangeNum}\r\n                                style={{ width: \"100px\", display: \"block\", marginTop: \"10px\" }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <span>考试时间</span>\r\n                            <div>\r\n                                <div>\r\n                                    <DatePicker\r\n                                        disabledDate={this.disabledStartDate}\r\n                                        showTime\r\n                                        format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                        value={startValue}\r\n                                        placeholder=\"Start\"\r\n                                        onChange={this.onStartChange}\r\n                                        onOpenChange={this.handleStartOpenChange}\r\n                                    />\r\n                                    <DatePicker\r\n                                        disabledDate={this.disabledEndDate}\r\n                                        showTime\r\n                                        format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                        value={endValue}\r\n                                        placeholder=\"End\"\r\n                                        onChange={this.onEndChange}\r\n                                        open={endOpen}\r\n                                        onOpenChange={this.handleEndOpenChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                创建试卷\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'normal_login' })(AddText)\n\n\n// WEBPACK FOOTER //\n// ./src/views/main/text/addText/addText.tsx"],"sourceRoot":""}