{"version":3,"sources":["util/permission.ts","store/modules nonrecursive /.ts$","store/modules/classType.ts","service/model nonrecursive /.ts$","service/model/class.ts","service/model/login.ts","service/model/mark.ts","service/model/question.ts","service/model/text.ts","service/model/user.ts","store/modules/global.ts","store/modules/login.ts","store/modules/mark.ts","store/modules/question.ts","store/modules/text.ts","store/modules/user.ts","language/zh-CN.ts","language/en-US.ts","util/saveToken.ts","router/routerSetting.tsx","store/index.ts","../config/polyfills.js","index.tsx","App.tsx","router/router.tsx","router/routerview.tsx","service/index.ts","util/request.ts"],"names":["originRoutes","viewAutority","forbiddenView","route","func","routes","forEach","_a","item","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","children","view_id","findIndex","value","push","from","path","to","concat","beforeEach","history","__WEBPACK_IMPORTED_MODULE_1__saveToken__","userInfo","__WEBPACK_IMPORTED_MODULE_2__store_index__","keys","length","getUserInfo","replace","__webpack_exports__","listen","location","map","./classType.ts","./global.ts","./login.ts","./mark.ts","./question.ts","./text.ts","./user.ts","webpackContext","req","__webpack_require__","webpackContextResolve","id","Error","resolve","module","exports","getClassList","__WEBPACK_IMPORTED_MODULE_2__service_index__","addClassList","getGradeList","getRoomList","getStudentInfo","delStudent","delGrade","delRoom","updateGrade","ClassType","prototype","getTabAction","url","Promise","result","sent","code","addListAction","params","getGradeListAction","getRoomListAction","getStudentInfoAction","delStudentAction","delGradeAction","updateGradeAction","delRoomAction","__WEBPACK_IMPORTED_MODULE_1_mobx__","_b","./class.ts","defineProperty","d","__WEBPACK_IMPORTED_MODULE_0__util_request__","get","console","log","post","delete","data","put","loginInfo","getMarkList","getQuestion","getSubject","examType","getQuestionType","getCondition","getQuestionsType","addType","getExamType","addQuestions","updateQuestion","createText","getExamList","createPaper","getTabList","addList","addUserType","setUserType","getUserIn","getViewAuthority","updateUserInfo","getIdentityView","getUserList","Intl","this","locale","changeLocale","__WEBPACK_IMPORTED_MODULE_3__service_index__","account","window","localStorage","getItem","JSON","parse","Login","isLogin","login","form","remember","setItem","stringify","removeItem","autoLogin","__WEBPACK_IMPORTED_MODULE_2__util_saveToken__","token","loginOut","getUserInfoAction","Mark","getMarkListAction","Question","dataList","questionTypeList","msg","getType","questionType","condition","addTypeAction","addQuestionsAction","updateQuestionAction","Array","_c","_d","_e","_f","Text","questions","exam_exam_id","createTextAction","__WEBPACK_IMPORTED_MODULE_2_antd__","error","getExamListAction","createPaperAction","User","viewAuthority","userName","identityViews","identity_text","nowIndetityViews","avatar","setTypeAction","user_name","getIdentityViewAction","changeAvatar","updateUserInfoAction","arr","_this","menu.question","menu.question.addQuestion","menu.question.typeQuestion","menu.question.viewQuestion","menu.user","menu.user.addUser","menu.user.showUser","menu.exam","menu.exam.addExam","menu.exam.examList","menu.class","menu.class.room","menu.class.grade","menu.class.student","menu.marking","menu.marking.wait","getToken","setToken","removeToken","__WEBPACK_IMPORTED_MODULE_0_js_cookie__","key","n","val","expires","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_1_react_loadable__","__WEBPACK_IMPORTED_MODULE_1_react_loadable___default","Loading","main","loading","loader","e","then","bind","className","marking","question","text","user","addQuestion","showQuestion","typeQuestion","classRoom","classType","student","watingClass","addText","listText","createTextPaper","addUser","showUser","showDetail","classMate","component","title","type","context","obj","slice","enable","assign","__WEBPACK_IMPORTED_MODULE_2_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_5_mobx_react__","__WEBPACK_IMPORTED_MODULE_4__store__","__WEBPACK_IMPORTED_MODULE_3__App__","document","getElementById","localeMap","en","zh","__WEBPACK_IMPORTED_MODULE_10__language_zh_CN__","__WEBPACK_IMPORTED_MODULE_3_history__","__WEBPACK_IMPORTED_MODULE_8__util_permission__","App","_super","props","call","render","__WEBPACK_IMPORTED_MODULE_5__router_routerSetting__","__WEBPACK_IMPORTED_MODULE_9_react_intl__","global","messages","__WEBPACK_IMPORTED_MODULE_4_react_router__","__WEBPACK_IMPORTED_MODULE_2__router_router__","__WEBPACK_IMPORTED_MODULE_6_mobx_react__","RoutesView","__WEBPACK_IMPORTED_MODULE_2__routerview__","__WEBPACK_IMPORTED_MODULE_3__routerSetting__","RouterView","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","index","exact","cont","brr","entries","__WEBPACK_IMPORTED_MODULE_0_axios__","__WEBPACK_IMPORTED_MODULE_0_axios___default","instance","a","create","baseURL","123.206.55.50","127.0.0.1","host","timeout","headers","authorization","interceptors","request","use","config","reject","response","status","statusText"],"mappings":"8EAmCO,SAAoBA,EAAwBC,GAE/C,IAAMC,KAyBN,IAAIC,EAvBJ,SAASC,EAAKJ,EAAwBC,GAClC,IAAII,KACJL,EAAaM,QAAQ,SAACC,OAAEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,MAChBC,EAAKG,WACLH,EAAKG,SAAWP,EAAKI,EAAKG,SAAUV,IAEpCO,EAAKI,SAC2E,IAA5EX,EAAaY,UAAU,SAACC,GAAe,OAAAA,EAAMF,UAAYJ,EAAKI,UAC9DP,EAAOU,KAAKP,GAIZN,EAAca,MAAOC,KAAMR,EAAKS,KAAMC,GAAI,SAM9Cb,EAAOU,KAAKP,KAGpB,OAAOH,EAECD,CAAKJ,EAAcC,GAC/B,OAAOC,EAAciB,OAAOhB,kCArDhC,SAASiB,EAAWC,GAChB,GAAIZ,OAAAa,EAAA,EAAAb,GAAY,CACZ,IAAMc,EAAgBC,EAAA,EAAY,KAAED,SAC/Bd,OAAOgB,KAAKF,GAAUG,QAEvBF,EAAA,EAAY,KAAEG,mBAIlBN,EAAQO,QAAQ,UA8CTC,EAAA,EA9Df,SAAeR,GACXD,EAAWC,GAEMA,EAAQS,OAAO,SAACC,GAC7BX,EAAWC,4BCPnB,IAAAW,GACAC,iBAAA,KACAC,cAAA,KACAC,aAAA,KACAC,YAAA,KACAC,gBAAA,KACAC,YAAA,KACAC,YAAA,MAEA,SAAAC,EAAAC,GACA,OAAAC,EAAAC,EAAAF,IAEA,SAAAE,EAAAF,GACA,IAAAG,EAAAZ,EAAAS,GACA,KAAAG,EAAA,GACA,UAAAC,MAAA,uBAAAJ,EAAA,MACA,OAAAG,EAEAJ,EAAAf,KAAA,WACA,OAAAhB,OAAAgB,KAAAO,IAEAQ,EAAAM,QAAAH,EACAI,EAAAC,QAAAR,EACAA,EAAAI,GAAA,qHCpBSK,EAAAC,EAAA,EAAAD,aAAcE,EAAAD,EAAA,EAAAC,aAAcC,EAAAF,EAAA,EAAAE,aAAcC,EAAAH,EAAA,EAAAG,YAAaC,EAAAJ,EAAA,EAAAI,eAAgBC,EAAAL,EAAA,EAAAK,WAAYC,EAAAN,EAAA,EAAAM,SAAUC,EAAAP,EAAA,EAAAO,QAAQC,EAAAR,EAAA,EAAAQ,YAE9GC,EAAA,oBAAAA,aAuEA,OArEkBA,EAAAC,UAAAC,aAAN,SAAmBC,kCAAcC,QAAO,4EAC1B,SAAMd,EAAaa,WACrC,OAAoB,KADhBE,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAIDL,EAAAC,UAAAO,cAAN,SAAoBL,EAAaM,kCAAcL,QAAO,4EACxC,SAAMZ,EAAaW,EAAKM,WAC1C,OAAoB,KADhBJ,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAKDL,EAAAC,UAAAS,mBAAN,6HACc,SAAMjB,YACxB,OAAoB,KADhBY,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAKDL,EAAAC,UAAAU,kBAAN,6HACc,SAAMjB,YACxB,OAAoB,KADhBW,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAIDL,EAAAC,UAAAW,qBAAN,6HACc,SAAMjB,YAExB,OAAoB,KAFhBU,EAAczD,EAAA0D,QAEPC,MACP,EAAOF,aAIDL,EAAAC,UAAAY,iBAAN,SAAuBJ,qHACT,SAAMb,EAAWa,WACnC,OAAoB,KADhBJ,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAKDL,EAAAC,UAAAa,eAAN,SAAqBL,qHACP,SAAMZ,EAASY,WACjC,OAAoB,KADhBJ,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAKDL,EAAAC,UAAAc,kBAAN,SAAwBN,qHACV,SAAMV,EAAYU,WACpC,OAAoB,KADhBJ,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAIDL,EAAAC,UAAAe,cAAN,SAAoBP,qHACN,SAAMX,EAAQW,WAChC,OAAoB,KADhBJ,EAAczD,EAAA0D,QACPC,MACP,EAAOF,aAhEPvD,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAA+C,2CAAPb,kBAAOxD,EAAAE,0CAOxCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,uHAA6D,2CAAPb,kBAAOc,EAAApE,2CAQtDA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,2JAQOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0JAOOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,6JAQOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,+JAQOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,6JAQOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gKAOOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,4JAQLjB,EAvEA,GAwEe9B,EAAA,gCC7Ef,IAAAG,GACA8C,aAAA,KACA3C,aAAA,KACAC,YAAA,KACAC,gBAAA,KACAC,YAAA,KACAC,YAAA,MAEA,SAAAC,EAAAC,GACA,OAAAC,EAAAC,EAAAF,IAEA,SAAAE,EAAAF,GACA,IAAAG,EAAAZ,EAAAS,GACA,KAAAG,EAAA,GACA,UAAAC,MAAA,uBAAAJ,EAAA,MACA,OAAAG,EAEAJ,EAAAf,KAAA,WACA,OAAAhB,OAAAgB,KAAAO,IAEAQ,EAAAM,QAAAH,EACAI,EAAAC,QAAAR,EACAA,EAAAI,GAAA,wCCtBAnC,OAAAsE,eAAAlD,EAAA,cAAAf,OAAA,IAAA4B,EAAAsC,EAAAnD,EAAA,iCAAAoB,IAAAP,EAAAsC,EAAAnD,EAAA,iCAAAsB,IAAAT,EAAAsC,EAAAnD,EAAA,iCAAAuB,IAAAV,EAAAsC,EAAAnD,EAAA,gCAAAwB,IAAAX,EAAAsC,EAAAnD,EAAA,mCAAAyB,IAAAZ,EAAAsC,EAAAnD,EAAA,+BAAA0B,IAAAb,EAAAsC,EAAAnD,EAAA,6BAAA2B,IAAAd,EAAAsC,EAAAnD,EAAA,gCAAA6B,IAAAhB,EAAAsC,EAAAnD,EAAA,4BAAA4B,IAAA,IAAAwB,EAAAvC,EAAA,IAEWO,EAAa,SAACa,GACrB,OAAOmB,EAAA,EAAQC,IAAIpB,IAEZX,EAAa,SAACW,EAAWM,GAEhC,OADAe,QAAQC,IAAItB,EAAIM,GACTa,EAAA,EAAQI,KAAKvB,EAAIM,IAGjBhB,EAAa,WACpB,OAAO6B,EAAA,EAAQC,IAAI,kBAGZ7B,EAAY,WACnB,OAAO4B,EAAA,EAAQC,IAAI,iBAGZ5B,EAAe,WACtB,OAAO2B,EAAA,EAAQC,IAAI,oBAGZ3B,EAAW,SAACa,GACnB,OAAOa,EAAA,EAAQK,OAAO,mBAAmBlB,IAGlCZ,EAAS,SAACY,GAEjB,OADAe,QAAQC,IAAIhB,EAAO,aACZa,EAAA,EAAQK,OAAO,wBAAwBC,KAAKnB,KAG5CV,EAAY,SAACU,GACpB,OAAOa,EAAA,EAAQO,IAAI,uBAAuBpB,IAGnCX,EAAQ,SAACW,GAChB,OAAOa,EAAA,EAAQK,OAAO,wBAAwBC,KAAKnB,wCCpCvD3D,OAAAsE,eAAAlD,EAAA,cAAAf,OAAA,IAAA4B,EAAAsC,EAAAnD,EAAA,8BAAA4D,IAAA/C,EAAAsC,EAAAnD,EAAA,gCAAAF,IAAA,IAAAsD,EAAAvC,EAAA,IAGW+C,EAAU,SAACrB,GACnB,OAAOa,EAAA,EAAQI,KAAK,cAAcjB,IAG1BzC,EAAY,WACnB,OAAOsD,EAAA,EAAQC,IAAI,sDCRvBzE,OAAAsE,eAAAlD,EAAA,cAAAf,OAAA,IAAA4B,EAAAsC,EAAAnD,EAAA,gCAAA6D,IAAA,IAAAT,EAAAvC,EAAA,IAGWgD,EAAY,SAAC5B,EAAWM,GAC/B,OAAOa,EAAA,EAAQC,IAAIpB,GAAKM,OAAMA,wCCJlC3D,OAAAsE,eAAAlD,EAAA,cAAAf,OAAA,IAAA4B,EAAAsC,EAAAnD,EAAA,gCAAA8D,IAAAjD,EAAAsC,EAAAnD,EAAA,+BAAA+D,IAAAlD,EAAAsC,EAAAnD,EAAA,6BAAAgE,IAAAnD,EAAAsC,EAAAnD,EAAA,oCAAAiE,IAAApD,EAAAsC,EAAAnD,EAAA,iCAAAkE,IAAArD,EAAAsC,EAAAnD,EAAA,qCAAAmE,IAAAtD,EAAAsC,EAAAnD,EAAA,4BAAAoE,IAAAvD,EAAAsC,EAAAnD,EAAA,gCAAAqE,IAAAxD,EAAAsC,EAAAnD,EAAA,iCAAAsE,IAAAzD,EAAAsC,EAAAnD,EAAA,mCAAAuE,IAAA,IAAAnB,EAAAvC,EAAA,IAGWiD,EAAc,SAACvB,GACtB,OAAOa,EAAA,EAAQC,IAAI,6BAA8Bd,OAAMA,KAIhDwB,EAAY,SAACxB,GACpB,OAAOa,EAAA,EAAQC,IAAI,iBAAiBd,OAAMA,KAInCyB,EAAW,SAACzB,GACnB,OAAOa,EAAA,EAAQC,IAAI,kBAAkBd,OAAMA,KAIpC0B,EAAkB,SAAC1B,GAC1B,OAAOa,EAAA,EAAQC,IAAI,0BAA0Bd,OAAMA,KAI5C2B,EAAc,SAAC3B,GACtB,OAAOa,EAAA,EAAQC,IAAI,6BAA6Bd,OAAMA,KAG/C4B,EAAiB,WACxB,OAAOf,EAAA,EAAQC,IAAI,2BAGZe,EAAQ,SAAC7B,GAChB,OAAOa,EAAA,EAAQC,IAAI,6BAA6Bd,OAAMA,KAG/C8B,EAAY,WACnB,OAAOjB,EAAA,EAAQC,IAAI,mBAGZiB,EAAa,SAAC/B,GACrB,OAAOa,EAAA,EAAQI,KAAK,kBAAkBjB,IAG/BgC,EAAe,SAAChC,GAEvB,OADAe,QAAQC,IAAIhB,GACLa,EAAA,EAAQO,IAAI,yBAAyBpB,uCC7ChD3D,OAAAsE,eAAAlD,EAAA,cAAAf,OAAA,IAAA4B,EAAAsC,EAAAnD,EAAA,+BAAAwE,IAAA3D,EAAAsC,EAAAnD,EAAA,gCAAAyE,IAAA5D,EAAAsC,EAAAnD,EAAA,gCAAA0E,IAAA,IAAAtB,EAAAvC,EAAA,IAEW2D,EAAW,SAACjC,GACnB,OAAOa,EAAA,EAAQI,KAAK,aAAajB,IAE1BkC,EAAY,WACnB,OAAOrB,EAAA,EAAQC,IAAI,eAEZqB,EAAY,SAACnC,EAAWxB,GAC/B,OAAOqC,EAAA,EAAQO,IAAI,cAAc5C,EAAKwB,uCCT1C3D,OAAAsE,eAAAlD,EAAA,cAAAf,OAAA,IAAA4B,EAAAsC,EAAAnD,EAAA,+BAAA2E,IAAA9D,EAAAsC,EAAAnD,EAAA,4BAAA4E,IAAA/D,EAAAsC,EAAAnD,EAAA,gCAAA6E,IAAAhE,EAAAsC,EAAAnD,EAAA,gCAAA8E,IAAAjE,EAAAsC,EAAAnD,EAAA,8BAAA+E,IAAAlE,EAAAsC,EAAAnD,EAAA,qCAAAgF,IAAAnE,EAAAsC,EAAAnD,EAAA,mCAAAiF,IAAApE,EAAAsC,EAAAnD,EAAA,oCAAAkF,IAAArE,EAAAsC,EAAAnD,EAAA,gCAAAmF,IAAA,IAAA/B,EAAAvC,EAAA,IAIW8D,EAAW,SAAC1C,GACnB,OAAOmB,EAAA,EAAQC,IAAIpB,IAGZ2C,EAAQ,SAAC3C,EAAWM,GAC7B,OAAOa,EAAA,EAAQI,KAAKvB,EAAIM,IAGfsC,EAAY,SAAC5C,EAAWM,GACjC,OAAOa,EAAA,EAAQC,IAAIpB,GAAKM,OAAMA,KAGrBuC,EAAY,SAAC7C,EAAWM,GAChC,OAAOa,EAAA,EAAQI,KAAKvB,EAAIM,IAIhBwC,EAAU,WACjB,OAAO3B,EAAA,EAAQC,IAAI,mBAIZ2B,EAAiB,WAC1B,OAAO5B,EAAA,EAAQC,IAAI,yBAGV4B,EAAe,SAAC1C,GACzB,OAAOa,EAAA,EAAQO,IAAI,aAAapB,IAGvB2C,EAAgB,WACzB,OAAO9B,EAAA,EAAQC,IAAI,2CAGV8B,EAAY,WACrB,OAAO/B,EAAA,EAAQC,IAAI,uHCrCrB+B,EAAA,oBAAAA,IACgBC,KAAAC,OAAc,KAO9B,OAJYF,EAAArD,UAAAwD,aAAA,SAAaD,GAEjBD,KAAKC,OAAOA,GALJ1G,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,kEAGOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0JAILqC,EARA,GAUepF,EAAA,mICPP4D,EAAA4B,EAAA,EAAA5B,UAAU9D,EAAA0F,EAAA,EAAA1F,YACd2F,KAEDC,OAAOC,aAAaC,QAAQ,aAC3BH,EAAQI,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,WAAW,KAI9D,IAAAG,EAAA,oBAAAA,IAEgBV,KAAAW,SAAmB,EACnBX,KAAAI,QAAYA,UA2B5B,OA1BkBM,EAAAhE,UAAAkE,MAAN,SAAYC,kCAAYhE,QAAO,4EACjB,SAAM0B,EAAUsC,WAalC,OAZiB,KADb/D,EAAczD,EAAA0D,QACRC,OAEH6D,EAAKC,SACFT,OAAOC,aAAaS,QAAQ,UAAUP,KAAKQ,UAAUH,IAEtDR,OAAOC,aAAaW,WAAW,WAGjCJ,EAAKK,WACL3H,OAAA4H,EAAA,EAAA5H,CAASuD,EAAOsE,SAGvB,EAAOtE,SAIG4D,EAAAhE,UAAA2E,SAAN,0CAAiBxE,QAAO,sDAC5BtD,OAAA4H,EAAA,EAAA5H,YAGSmH,EAAAhE,UAAA4E,kBAAN,uHACM,SAAM7G,YACnB,SADapB,EAAA0D,cAzBDxD,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,oEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,mEACOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAAsC,2CAAPb,kBAAOxD,EAAAE,mCAkB/BA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0GAA+B,2CAAPb,kBAAOc,EAAApE,sCAIzBA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0JAIJgD,EA9BA,GAgCe/F,EAAA,kHC3CP6D,QAAA,EAAAA,YAER+C,EAAA,oBAAAA,KAKA,OAJiBA,EAAA7E,UAAA8E,kBAAN,SAAwB5E,EAAWM,+GACxB,SAAMsB,EAAY5B,EAAIM,WACrC,SADe7D,EAAA0D,cADXxD,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,uKAIJ6D,EALA,GAMe5G,EAAA,0HCRP8D,EAAAzC,EAAA,EAAAyC,YAAaC,EAAA1C,EAAA,EAAA0C,WAAYC,EAAA3C,EAAA,EAAA2C,SAAUC,EAAA5C,EAAA,EAAA4C,gBAAiBC,EAAA7C,EAAA,EAAA6C,aAAcE,EAAA/C,EAAA,EAAA+C,QAASE,EAAAjD,EAAA,EAAAiD,aAAaC,EAAAlD,EAAA,EAAAkD,eAChGuC,EAAA,oBAAAA,IACgBzB,KAAA0B,YAEA1B,KAAA2B,oCA0EhB,OAxEkBF,EAAA/E,UAAA+B,YAAN,SAAkBvB,kCAAcL,QAAO,4EAEzB,SAAM4B,EAAYvB,WAEpC,OAFIJ,EAAczD,EAAA0D,OACUD,EAAME,KAANF,EAAMuB,KAANvB,EAAM8E,KAE9B,EAAO9E,SAOD2E,EAAA/E,UAAAgC,WAAN,SAAiBxB,kCAAcL,QAAO,4EACxB,SAAM6B,EAAWxB,WAEnC,OAFIJ,EAAczD,EAAA0D,OACUD,EAAME,KAANF,EAAMuB,KAANvB,EAAM8E,KAE9B,EAAO9E,SAOD2E,EAAA/E,UAAAmF,QAAN,SAAc3E,kCAAcL,QAAO,4EACrB,SAAM8B,EAASzB,WAEjC,OAFIJ,EAAczD,EAAA0D,OACUD,EAAME,KAANF,EAAMuB,KAANvB,EAAM8E,KAE9B,EAAO9E,SAOD2E,EAAA/E,UAAAoF,aAAN,SAAmB5E,kCAAcL,QAAO,4EAC1B,SAAM+B,EAAgB1B,WAExC,OAFIJ,EAAczD,EAAA0D,OACUD,EAAME,KAANF,EAAMuB,KAANvB,EAAM8E,KAE9B,EAAO9E,SAMD2E,EAAA/E,UAAAqF,UAAN,SAAgB7E,kCAAcL,QAAO,4EACvB,SAAMgC,EAAa3B,WAErC,OAFIJ,EAAczD,EAAA0D,OACUD,EAAME,KAANF,EAAMuB,KAANvB,EAAM8E,KAE9B,EAAO9E,SAOD2E,EAAA/E,UAAAsF,cAAN,SAAoB9E,+GACX,SAAM6B,EAAQ7B,WAC3B,SADa7D,EAAA0D,cAKH0E,EAAA/E,UAAAuF,mBAAN,SAAyB/E,+GAClB,SAAM+B,EAAa/B,WAC9B,SADW7D,EAAA0D,cAKD0E,EAAA/E,UAAAwF,qBAAN,SAA2BhF,+GAClB,SAAMgC,EAAehC,WAClC,SADa7D,EAAA0D,cAxELxD,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,oEAEWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,4BAAkC,2CAALyE,cAAK9I,EAAAE,gDAE3BA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAA8C,2CAAPb,kBAAOc,EAAApE,yCAYvCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAA6C,2CAAPb,kBAAOuF,EAAA7I,wCAWtCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAA0C,2CAAPb,kBAAOwF,EAAA9I,qCAWnCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAA+C,2CAAPb,kBAAOyF,EAAA/I,0CAUxCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAA4C,2CAAPb,kBAAO0F,EAAAhJ,uCAWrCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,4JAMOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,iKAMOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,mKAKL+D,EA7EA,GAkFe9G,EAAA,mIClFPwE,EAAAgB,EAAA,EAAAhB,WAAWC,EAAAe,EAAA,EAAAf,YAAYC,EAAAc,EAAA,EAAAd,YAG/BmD,EAAA,oBAAAA,IACgBxC,KAAAyC,aACAzC,KAAA0C,aAAiB,GAsBjC,OArBkBF,EAAA9F,UAAAiG,iBAAN,SAAuBzF,qHACT,SAAMiC,EAAWjC,WACnC,OAAoB,KADhBJ,EAAczD,EAAA0D,QACPC,MACPgD,KAAKyC,UAAU3F,EAAOuB,KAAKoE,UAC3BzC,KAAK0C,aAAa5F,EAAOuB,KAAKqE,cAC9B,EAAO5F,KAEP8F,EAAA,EAAQC,MAAM/F,EAAO8E,gBAIfY,EAAA9F,UAAAoG,kBAAN,uHACc,SAAM1D,YACxB,SADkB/F,EAAA0D,cAGRyF,EAAA9F,UAAAqG,kBAAN,SAAwB7F,qHAEb,OADXxB,EAAGsE,KAAK0C,cACG,EAAMrD,EAAYnC,EAAOxB,WACxC,SADerC,EAAA0D,cAnBPxD,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,qEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,wEACOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,+JAWOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0JAIOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gKAML8E,EAxBA,GAyBe7H,EAAA,0HC1BP2E,EAAAtD,EAAA,EAAAsD,WAAYC,EAAAvD,EAAA,EAAAuD,QAASC,EAAAxD,EAAA,EAAAwD,YAAaC,EAAAzD,EAAA,EAAAyD,YAAaC,EAAA1D,EAAA,EAAA0D,UAAWC,EAAA3D,EAAA,EAAA2D,iBAAiBC,EAAA5D,EAAA,EAAA4D,eAAgBC,EAAA7D,EAAA,EAAA6D,gBAAiBC,EAAA9D,EAAA,EAAA8D,YACpHkD,EAAA,oBAAAA,IAEchD,KAAA3F,YACA2F,KAAAiD,iBACAjD,KAAAkD,SAAgB,GAChBlD,KAAAmD,iBACAnD,KAAAoD,cAAwB,GACxBpD,KAAAqD,oBACArD,KAAAsD,OAAc,eAuE5B,OAtEgBN,EAAAtG,UAAAC,aAAN,SAAmBC,qHACP,SAAM0C,EAAW1C,WACnC,OAAoB,KADhBE,EAAczD,EAAA0D,QACPC,MACT,EAAOF,aAKGkG,EAAAtG,UAAAO,cAAN,SAAoBL,EAAaM,+GACrB,SAAMqC,EAAQ3C,EAAKM,WACrC,SADkB7D,EAAA0D,cAMNiG,EAAAtG,UAAAsF,cAAN,SAAoBpF,EAAaM,+GACrB,SAAMsC,EAAY5C,EAAKM,WACzC,SADkB7D,EAAA0D,cAKNiG,EAAAtG,UAAA6G,cAAN,SAAoB3G,EAAaM,+GACrB,SAAMuC,EAAY7C,EAAKM,WACzC,SADkB7D,EAAA0D,cAKNiG,EAAAtG,UAAAjC,YAAN,0CAAoBoC,QAAO,4EACd,SAAM6C,mBAArBrF,EAAehB,EAAA0D,OACnBiD,KAAK3F,SAASA,EAASgE,KACvB2B,KAAKsD,OAASjJ,EAASgE,KAAKiF,OAC5BtD,KAAKkD,SAAW7I,EAASgE,KAAKmF,UAC9BxD,KAAKoD,cAAgB/I,EAASgE,KAAK+E,cACnCpD,KAAKyD,wBACLzD,KAAKL,6BAKOqD,EAAAtG,UAAAiD,iBAAN,0CAA0B9C,QAAO,4EACd,SAAM8C,mBAA3BsD,EAAqB5J,EAAA0D,OACzBiD,KAAKiD,cAAgBA,EAAc5E,eAGvB2E,EAAAtG,UAAAgH,aAAN,SAAmBJ,kCAAezG,QAAO,sDAC7CmD,KAAKsD,OAAOA,WAGFN,EAAAtG,UAAAiH,qBAAN,SAA2BzG,kCAAYL,QAAO,sEACzC,SAAM+C,EAAe1C,WAChC,SADW7D,EAAA0D,cAGCiG,EAAAtG,UAAA+G,sBAAN,sIACO,SAAM5D,YAWnB,OAXI/C,EAASzD,EAAA0D,OAET6G,KACH9G,EAAOuB,KAAKjF,QAAQ,SAACE,GAChBA,EAAK8J,eAAiBS,EAAKT,eAE7BQ,EAAI/J,MAAOH,QAASJ,EAAKI,YAI7BsG,KAAKqD,iBAAiBO,GACtB,EAAO9G,SAGKkG,EAAAtG,UAAAoD,YAAN,uHACU,SAAMA,mBAANzG,EAAA0D,iBA3ENxD,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,oEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,wEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,oEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,yEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,yEACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,2EACWnE,OAAAC,EAAA,EAAAD,EAAXmE,EAAA,kEACOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,2JAQOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,mKAOOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,mKAMOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,mKAMOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0GAAkC,2CAAPb,kBAAOxD,EAAAE,yCAY3BA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,0GAAwC,2CAAPb,kBAAOc,EAAApE,8CAKjCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAAgD,2CAAPb,kBAAOuF,EAAA7I,0CAIzCA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,gHAAqD,2CAAPb,kBAAOwF,EAAA9I,kDAI9CA,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,8JAeOnE,OAAAC,EAAA,EAAAD,EAAPmE,EAAA,oJAGHsF,EA/EA,GAgFerI,EAAA,6CCrFAA,EAAA,GACXmJ,gBAAiB,2BACjBC,4BAA6B,2BAC7BC,6BAA8B,2BAC9BC,6BAA8B,2BAC9BC,YAAY,2BACZC,oBAAoB,2BACpBC,qBAAqB,2BACrBC,YAAY,2BACZC,oBAAoB,2BACpBC,qBAAqB,2BACrBC,aAAa,2BACbC,kBAAkB,2BAClBC,mBAAmB,2BACnBC,qBAAqB,2BACrBC,eAAe,2BACfC,oBAAoB,+DCjBVlK,EAAA,GACVmJ,gBAAiB,iBACjBC,4BAA6B,cAC7BC,6BAA8B,eAC9BC,6BAA8B,eAC9BC,YAAY,aACZC,oBAAoB,UACpBC,qBAAqB,WACrBC,YAAY,aACZC,oBAAoB,UACpBC,qBAAqB,WACrBC,aAAa,cACbC,kBAAkB,kBAClBC,mBAAmB,cACnBC,qBAAqB,gBACrBC,eAAe,gBACfC,oBAAoB,mDChBxBrJ,EAAAsC,EAAAnD,EAAA,sBAAAmK,IAAAtJ,EAAAsC,EAAAnD,EAAA,sBAAAoK,IAAAvJ,EAAAsC,EAAAnD,EAAA,sBAAAqK,IAAA,IAAAC,EAAAzJ,EAAA,MAEM0J,GAFN1J,EAAA2J,EAAAF,GAEY,iBAEDH,EAAoB,WAC3B,OAAOG,EAAA,IAAWC,IAIXH,EAAgC,SAACK,GACxCH,EAAA,IAAWC,EAAKE,GAAOC,QAAS,KAIzBL,EAAwB,WAC/BC,EAAA,OAAcC,sCCflB,IAAAI,EAAA9J,EAAA,GAAA+J,GAAA/J,EAAA2J,EAAAG,GAAA9J,EAAA,MAAAgK,EAAAhK,EAAA2J,EAAAI,GAEA,SAASE,IACL,OACIH,EAAA,uCAIR,IAAII,EAAOF,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eAClDnF,EAAQ4E,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACnDC,EAAYR,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACvDE,EAAUT,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACrDG,EAAWV,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACtDI,EAAOX,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eAClDK,EAAOZ,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eAClDM,EAAcb,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eACzDO,EAAed,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eAC1DQ,EAAef,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eAC1DS,EAAYhB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACvDU,EAAYjB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACvDW,EAAUlB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eACrDY,EAAcnB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACzDa,EAAUpB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eACrDc,EAAWrB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eACtDe,EAAkBtB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eAC7DgB,EAAUvB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eACrDiB,EAAWxB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eACtDkB,EAAazB,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eACxDmB,EAAY1B,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,IAAAC,KAAAtK,EAAAuK,KAAA,eAEvD5M,IAEIgO,UAAWvG,EACX7G,KAAM,WAGNN,WAEQ2N,MAAS,gBACTC,KAAQ,UACR5N,WAEQ2N,MAAS,4BACT1L,GAAM,EACNyL,UAAWd,EACX3M,QAAS,oBACTK,KAAM,+BAGNoN,UAAWF,EACXvN,QAAS,uBACTK,KAAM,8BAENoN,UAxBL3B,KAAWG,QAASF,EAASG,OAAQ,WAAM,OAAApK,EAAAqK,EAAA,GAAAC,KAAAtK,EAAAuK,KAAA,eAyBtCrM,QAAS,qBACTK,KAAM,oCAGNqN,MAAS,6BACT1L,GAAM,EACNyL,UAAWb,EACX5M,QAAS,sBACTK,KAAM,gCAENqN,MAAS,6BACT1L,GAAM,EACNyL,UAAWZ,EACX7M,QAAS,qBACTK,KAAM,gCAGdoN,UAAWjB,EACXnM,KAAM,mBAINqN,MAAS,YACTC,KAAQ,OACR5N,WACI2N,MAAS,oBACT1L,GAAM,EACNyL,UAAWJ,EACXhN,KAAM,uBAGNqN,MAAS,qBACT1L,GAAM,EACNyL,UAAWH,EACXjN,KAAM,wBAGVoN,UAAWf,EACXrM,KAAM,eAKNqN,MAAS,YACTC,KAAQ,WACRF,UAAWhB,EACXpM,KAAM,aACNN,WACI2N,MAAS,oBACT1L,GAAM,EACNyL,UAAWP,EACX7M,KAAM,uBAGNqN,MAAS,qBACT1L,GAAM,EACNyL,UAAWN,EAEX9M,KAAM,wBAENoN,UAAWL,EAEX/M,KAAM,iCAKVqN,MAAS,aACTC,KAAQ,UACR5N,WACI2N,MAAS,kBACT1L,GAAM,EACNyL,UAAWX,EAEXzM,KAAM,8BAGNqN,MAAS,mBACT1L,GAAM,EACNyL,UAAWV,EAEX1M,KAAM,8BAENqN,MAAS,qBACT1L,GAAM,GACNyL,UAAWT,EAEX3M,KAAM,4BAEVoN,UAAWnB,EACXjM,KAAM,oBAGNqN,MAAS,eACTC,KAAQ,UACR5N,WACI2N,MAAS,oBACT1L,GAAM,GACNyL,UAAWR,EACX5M,KAAM,8BAGNoN,UAAWD,EACXnN,KAAM,gCAGVoN,UAAWlB,EACXlM,KAAM,kBAKdoN,UAAWzB,EACX3L,KAAM,QACNL,QAAS,SAUTI,KAAM,IACNE,GAAI,WAGGW,EAAA,sCClLf,IAAM2M,EAAU9L,EAAA,MAEZ+L,KACJD,EAAQ/M,OAAOnB,QAAQ,SAAC8L,GACtBqC,EAAIrC,EAAIsC,MAAM,GAAGA,MAAM,GAAI,IAAM,IAAKF,EAAQpC,GAAY,WAI7CvK,EAAA,mFCVf,qBAAAkC,UAIErB,EAAQ,KAAgCiM,SAC1CpH,OAAAxD,QAAmBrB,EAAQ,MAI3BA,EAAQ,KAIRjC,OAAAmO,OAAgBlM,EAAQ,8JCPxBmM,EAAA,OACEC,EAAA,cAACC,EAAA,EAAQtO,OAAAC,EAAA,EAAAD,IAAKuO,EAAA,GACZF,EAAA,cAACG,EAAA,EAAG,OAGNC,SAASC,eAAe,oKCEpBC,GACJC,WAAI,EACJC,GAAIC,EAAA,GAGAlO,EAAUZ,OAAA+O,EAAA,EAAA/O,GAChBA,OAAAgP,EAAA,EAAAhP,CAAUY,GAOV,IAAAqO,EAAA,SAAAC,GACE,SAAAD,EAAYE,UACVD,EAAAE,KAAA3I,KAAM0I,IAAM1I,KAqBhB,OAvBkBzG,OAAAC,EAAA,EAAAD,CAAAiP,EAAAC,GAMTD,EAAA9L,UAAAkM,OAAP,WASE,OAPG5I,KAAK0I,MAAMtC,KAAK/C,iBAAiB7I,QACtBjB,OAAAgP,EAAA,EAAAhP,CAAWsP,EAAA,EAAQ7I,KAAK0I,MAAMtC,KAAK/C,kBAOhDuE,EAAA,cAACkB,EAAA,GAAa7I,OAAQD,KAAK0I,MAAMK,OAAO9I,OAAQ+I,SAAUd,EAAUlI,KAAK0I,MAAMK,OAAO9I,SACrF2H,EAAA,cAACqB,EAAA,GAAO9O,QAASA,GACfyN,EAAA,cAACsB,EAAA,EAAU,SAlBbV,EAAGjP,OAAAC,EAAA,EAAAD,EAFRA,OAAA4P,EAAA,EAAA5P,CAAO,OAAQ,UACf4P,EAAA,6CACKX,GAAN,CAAkBZ,EAAA,WAwBHjN,EAAA,oFC1CfyO,EAAA,SAAAX,GAAA,SAAAW,mDAQA,OARyB7P,OAAAC,EAAA,EAAAD,CAAA6P,EAAAX,GAEhBW,EAAA1M,UAAAkM,OAAP,WAEM,OACIhB,EAAA,cAACyB,EAAA,GAAWlQ,OAAQmQ,EAAA,KAGhCF,EARA,CAAyBxB,EAAA,WASVjN,EAAA,2ECXT4O,EAAa,SAACb,GAEhB,OAAOd,EAAA,cAAC4B,EAAA,EAAM,KACTd,EAAMvP,OAAO2B,IAAI,SAACxB,EAAWmQ,GAC1B,OAAOnQ,EAAKS,KAAO6N,EAAA,cAAC4B,EAAA,GAAMtE,IAAKuE,EAAO1P,KAAMT,EAAKS,KAAM6O,OAAQ,SAACF,GAC5D,OAAOpP,EAAKG,UAAYH,EAAKG,SAASe,OAASoN,EAAA,cAACtO,EAAK6N,UAAS5N,OAAAC,EAAA,EAAAD,IAAKmP,GAC/Dd,EAAA,cAAC2B,GAAWpQ,OAAQG,EAAKG,YACTmO,EAAA,cAACtO,EAAK6N,UAAS5N,OAAAC,EAAA,EAAAD,IAAKmP,OAC9Bd,EAAA,cAAC4B,EAAA,GAAStE,IAAK5L,EAAKQ,KAAM4P,OAAK,EAAC5P,KAAMR,EAAKQ,KAAME,GAAIV,EAAKU,SAKrEW,EAAA,qCCnBf,IAAMgP,EAAOnO,EAAA,MAOToO,KALWD,EAAKpP,OAAOO,IAAI,SAACoK,GAC9B,OAAA3L,OAAOsQ,QAAQF,EAAKzE,MAKlB9L,QAAQ,SAACE,GACXsQ,EAAMA,EAAI3P,OAAOX,KAKnB,IAAMiO,EAAMhO,OAAoB,YAAEqQ,GACnBjP,EAAA,qCCjBf,IAAAmP,EAAAtO,EAAA,MAAAuO,EAAAvO,EAAA2J,EAAA2E,GAAA1P,EAAAoB,EAAA,KAAAoH,EAAApH,EAAA,KASMwO,EAAWD,EAAAE,EAAMC,QACnBC,SALFC,gBAAgB,yBAChBC,YAAY,yBAIGhK,OAAOxF,SAASyP,MAC7BC,QAAS,IACTC,SAAUC,cAAiBlR,OAAAa,EAAA,EAAAb,MAK/ByQ,EAASU,aAAaC,QAAQC,IAAK,SAACC,GAEhC,OAAOA,GACN,SAAChI,GAEF,OAAOhG,QAAQiO,OAAOjI,KAK1BmH,EAASU,aAAaK,SAASH,IAAK,SAACG,GAKjC,OAHwB,MAApBA,EAASC,QACXpI,EAAA,EAAQC,MAAMkI,EAASE,YAElBF,EAAS1M,MACd,SAACwE,GAOH,OALIA,EAAMkI,SAASC,QAAoC,MAA1BnI,EAAMkI,SAASC,QAC1CpI,EAAA,EAAQC,MAAMA,EAAMkI,SAASE,YAIxBpO,QAAQjB,QAAQiH,KAIZlI,EAAA","file":"static/js/main.5198322e.js","sourcesContent":["import { getToken } from './saveToken'\r\nimport store from \"../store/index\"\r\n\r\nfunction guard(history: any) {\r\n    beforeEach(history)\r\n    //监听页面的变化\r\n    const unListen = history.listen((location: any) => {\r\n        beforeEach(history)\r\n    })\r\n};\r\nfunction beforeEach(history: any) {\r\n    if (getToken()) {\r\n        const userInfo: any = store['user'].userInfo;\r\n        if (!Object.keys(userInfo).length) {\r\n            //获取身份信息 根据身份信息 分发页面权限\r\n            store['user'].getUserInfo()        \r\n        }\r\n    } else {\r\n        //跳转到登录页面\r\n        history.replace(\"/login\")\r\n    }\r\n}\r\n//根据用户的身份信息 筛选出有权限的页面\r\n/**\r\n * 根据用户的身份id 得到所有的页面权限id \r\n从路由列表中筛选出该身份对应的权限列表进行渲染页面 并将没有权限的页面的路径设置为403/404\r\n * @param originRoutes 路由列表,相应页面会对应view_id\r\n * @param viewAutority 获取的用户权限信息\r\n * 例如 登录页面对应的 view_id: \"login\", \r\n * 0: {view_authority_id: \"r50r9t-1p1kbm\", view_authority_text: \"登录\", view_id: \"login\"}\r\n1: {view_authority_id: \"8olznh-943zt\", view_authority_text: \"主界面\", view_id: \"main\"}\r\n2: {view_authority_id: \"4pvvb3-h5kzg\", view_authority_text: \"添加试题\", view_id: \"main-addQuestions\"}\r\n3: {view_authority_id: \"vnpojq-tisgu\", view_authority_text: \"试题分类\", view_id: \"main-questionsType\"}\r\n\r\n */\r\nexport function filterView(originRoutes: object[], viewAutority: object[]): object[] {\r\n    //用来保存没有权限的页面\r\n    const forbiddenView: object[] = [];\r\n    \r\n    function func(originRoutes: object[], viewAutority: object[]): object[] {\r\n        let routes: object[]  = [];\r\n        originRoutes.forEach(({ ...item }: any) => {\r\n            if (item.children) {\r\n                item.children = func(item.children, viewAutority)\r\n            }\r\n            if (item.view_id) {//筛选出对应身份可访问的页面\r\n                if (viewAutority.findIndex((value: any) => value.view_id === item.view_id) !== -1) {\r\n                    routes.push(item)\r\n                   \r\n                } else {//将此身份不能访问的页面跳转的403页面\r\n                  \r\n                    forbiddenView.push({ from: item.path, to: \"/403\" });\r\n                  \r\n                }\r\n             \r\n              \r\n            } else {//公共页面\r\n                routes.push(item);\r\n            }\r\n        })\r\n        return routes;\r\n    }\r\n    let route = func(originRoutes, viewAutority);\r\n    return forbiddenView.concat(route)\r\n}\r\nexport default guard;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/permission.ts","var map = {\n\t\"./classType.ts\": 1097,\n\t\"./global.ts\": 1122,\n\t\"./login.ts\": 1123,\n\t\"./mark.ts\": 1124,\n\t\"./question.ts\": 1125,\n\t\"./text.ts\": 1126,\n\t\"./user.ts\": 1127\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1096;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/store/modules nonrecursive \\.ts$\n// module id = 1096\n// module chunks = 22","import { observable, action } from \"mobx\"\r\nimport service from '@/service/index'\r\n\r\nconst  { getClassList, addClassList, getGradeList, getRoomList, getStudentInfo, delStudent, delGrade, delRoom,updateGrade } = service\r\n\r\nclass ClassType {\r\n    //获取班级号，教室号\r\n    @action async getTabAction(url: string): Promise<any> {\r\n        let result: any = await getClassList(url)\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n\r\n    }\r\n    @action async addListAction(url: string, params: any): Promise<any> {\r\n        let result: any = await addClassList(url, params)\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n\r\n    }\r\n    //获取班级名\r\n    @action async getGradeListAction() {\r\n        let result: any = await getGradeList()\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n\r\n    }\r\n    //获取教室名\r\n    @action async getRoomListAction() {\r\n        let result: any = await getRoomList()\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n    }\r\n    //获取学生信息\r\n    @action async getStudentInfoAction() {\r\n        let result: any = await getStudentInfo()\r\n\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n    }\r\n    //删除学生信息\r\n    @action async delStudentAction(params: any) {\r\n        let result: any = await delStudent(params)\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n\r\n    }\r\n    //删除班级\r\n    @action async delGradeAction(params: any) {\r\n        let result: any = await delGrade(params)\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n\r\n    }\r\n    //更新班级\r\n    @action async updateGradeAction(params:any){\r\n        let result: any = await updateGrade(params)\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n    }\r\n    //删除教室\r\n    @action async delRoomAction(params: any) {\r\n        let result: any = await delRoom(params)\r\n        if (result.code === 1) {\r\n            return result\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport default ClassType\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/classType.ts","var map = {\n\t\"./class.ts\": 1099,\n\t\"./login.ts\": 1117,\n\t\"./mark.ts\": 1118,\n\t\"./question.ts\": 1119,\n\t\"./text.ts\": 1120,\n\t\"./user.ts\": 1121\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1098;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/service/model nonrecursive \\.ts$\n// module id = 1098\n// module chunks = 22","import request from \"@/util/request\"\r\n\r\nexport let getClassList=(url:string)=>{\r\n    return request.get(url)\r\n}\r\nexport let addClassList=(url:string,params:any)=>{\r\n    console.log(url,params)\r\n    return request.post(url,params)\r\n}\r\n//获取班级列表\r\nexport let getGradeList=()=>{\r\n    return request.get(\"/manger/grade\")\r\n}\r\n///manger/room 获取教室列表\r\nexport let getRoomList=()=>{\r\n    return request.get(\"/manger/room\")\r\n}\r\n///student/info 获取学生信息\r\nexport let getStudentInfo=()=>{\r\n    return request.get(\"/manger/student\")\r\n}\r\n//删除学生信息\r\nexport let delStudent=(params:any)=>{\r\n    return request.delete(`/manger/student/${params}`)\r\n}\r\n//删除班级/manger/grade/delete\r\nexport let delGrade=(params:any)=>{\r\n    console.log(params,\"nnnnnnnnn\")\r\n    return request.delete(`/manger/grade/delete`,{data:params})\r\n}\r\n//更新班级\r\nexport let updateGrade=(params:any)=>{\r\n    return request.put(\"/manger/grade/update\",params)\r\n}\r\n//删除教室\r\nexport let delRoom=(params:any)=>{\r\n    return request.delete(`/manger/room/delete/`,{data:params})\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/model/class.ts","import request from \"@/util/request\"\r\n\r\n\r\nexport let loginInfo=(params:any)=>{\r\n   return request.post(\"/user/login\",params)\r\n}\r\n//获取用户信息\r\nexport let getUserInfo=()=>{\r\n    return request.get(\"/user/userInfo\")\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/model/login.ts","import request from \"../../util/request\"\r\n\r\n//获取学生试卷列表\r\nexport let getMarkList=(url:string,params:object)=>{\r\n    return request.get(url,{params})\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/model/mark.ts","import request from '../../util/request';\r\n\r\n// 获取试题\r\nexport let getQuestion = (params: object)=>{\r\n    return request.get('/exam/questions/condition', {params});\r\n}\r\n\r\n//获取课程\r\nexport let getSubject= (params:object)=>{\r\n    return request.get(\"/exam/subject\",{params});\r\n}\r\n\r\n//获取考试类型\r\nexport let examType = (params:object)=>{\r\n    return request.get(\"/exam/examType\",{params})\r\n}\r\n\r\n//获取试题类型\r\nexport let getQuestionType = (params:object)=>{\r\n    return request.get(\"/exam/getQuestionsType\",{params})\r\n}\r\n\r\n//按条件获取试题\r\nexport let getCondition =(params:object)=>{\r\n    return request.get(\"/exam/questions/condition\",{params})\r\n}\r\n//获取所有的试题类型\r\nexport let getQuestionsType=()=>{\r\n    return request.get(\"/exam/getQuestionsType\")\r\n}\r\n//添加试题类型\r\nexport let addType=(params:any)=>{\r\n    return request.get(\"/exam/insertQuestionsType\",{params})\r\n}\r\n//获取所有考试类型\r\nexport let getExamType=()=>{\r\n    return request.get(\"/exam/examType\")\r\n}\r\n//添加试题接口\r\nexport let addQuestions=(params:any)=>{\r\n    return request.post(\"/exam/questions\",params)\r\n}\r\n//更新试题接口\r\nexport let updateQuestion=(params:any)=>{\r\n    console.log(params)\r\n    return request.put(\"/exam/questions/update\",params)\r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/model/question.ts","import request from \"../../util/request\"\r\n\r\nexport let createText=(params:any)=>{\r\n    return request.post(\"/exam/exam\",params)\r\n}\r\nexport let getExamList=()=>{\r\n    return request.get(\"/exam/exam\")\r\n}\r\nexport let createPaper=(params:any,id:any)=>{\r\n    return request.put(`/exam/exam/${id}`,params)\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/model/text.ts","import request from \"../../util/request\"\r\n\r\n//展示身份数据\r\n\r\nexport let getTabList=(url:string)=>{\r\n    return request.get(url)\r\n}\r\n\r\nexport let addList=(url:string,params:any)=>{\r\n  return request.post(url,params)\r\n}\r\n\r\nexport let addUserType=(url:string,params:any)=>{\r\n  return request.get(url,{params})\r\n}\r\n\r\nexport let setUserType=(url:string,params:any)=>{\r\n   return request.post(url,params)\r\n}\r\n\r\n//获取用户信息\r\nexport let getUserIn=()=>{\r\n    return request.get(\"/user/userInfo\")\r\n}\r\n\r\n//获取用户权限\r\nexport let getViewAuthority=()=>{\r\n  return request.get(\"/user/view_authority\")\r\n}\r\n//更改用户信息\r\nexport let updateUserInfo=(params:any)=>{\r\n  return request.put(\"/user/user\",params)\r\n}\r\n//展示身份和视图权限关系/user/identity_view_authority_relation\r\nexport let getIdentityView=()=>{\r\n  return request.get(\"/user/identity_view_authority_relation\")\r\n}\r\n//获取用户列表\r\nexport let getUserList=()=>{\r\n  return request.get(\"/user/user\")\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/model/user.ts","import {observable,action} from \"mobx\"\r\n\r\nclass Intl{\r\n    @observable locale:string=\"zh\"\r\n\r\n    //按条件获取试题\r\n    @action changeLocale(locale:string):void{\r\n\r\n        this.locale=locale\r\n    }\r\n}\r\n\r\nexport default Intl;\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/global.ts","import {observable, action} from 'mobx'\r\n\r\nimport {setToken,removeToken} from \"../../util/saveToken\"\r\n\r\nimport service from '@/service/index'\r\nconst  {loginInfo,getUserInfo} = service\r\nlet account={};\r\n//若本地存储中存在‘account’ 则将account赋值\r\nif(window.localStorage.getItem('account')){\r\n    account=JSON.parse(window.localStorage.getItem('account')+'');\r\n}\r\n\r\n\r\nclass Login{\r\n    \r\n    @observable isLogin: boolean = false;\r\n    @observable account:any=account;\r\n    @action async login(form: any): Promise<any>{\r\n        let result: any = await loginInfo(form);\r\n        if(result.code===1){\r\n            //1判断是否记住用户名和密码\r\n            if(form.remember){\r\n                  window.localStorage.setItem('account',JSON.stringify(form))\r\n            }else{\r\n                 window.localStorage.removeItem('account')\r\n            }\r\n           //2.判断是否七天免登陆\r\n            if(form.autoLogin){\r\n               setToken(result.token);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    //退出登录\r\n\r\n    @action async loginOut():Promise<any>{\r\n        removeToken();\r\n    }\r\n     //获取用户信息\r\n   @action async getUserInfoAction(){     \r\n    let result = await getUserInfo()\r\n    return result;\r\n }\r\n}\r\n\r\nexport default Login;\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/login.ts","import {observable,action} from \"mobx\";\r\nimport service from '@/service/index'\r\nconst  {getMarkList} = service\r\n\r\nclass Mark{\r\n   @action async getMarkListAction(url:string,params:object){\r\n       let result:any=await getMarkList(url,params)\r\n       return result\r\n   }\r\n}\r\nexport default Mark\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/mark.ts","import { observable, action } from 'mobx'\r\nimport service from '@/service/index'\r\nconst { getQuestion, getSubject, examType, getQuestionType, getCondition, addType, addQuestions,updateQuestion } = service\r\nclass Question {\r\n    @observable dataList: object = {};\r\n\r\n    @observable questionTypeList: Array<object> = []\r\n    // 按条件获取试题\r\n    @action async getQuestion(params: any): Promise<any> {\r\n\r\n        let result: any = await getQuestion(params);\r\n        const { code, data, msg } = result\r\n        if (code === 1) {\r\n            return result\r\n        }else {\r\n            return result\r\n        }\r\n\r\n    }\r\n    //获取课程\r\n    @action async getSubject(params: any): Promise<any> {\r\n        let result: any = await getSubject(params);\r\n        const { code, data, msg } = result;\r\n        if (code === 1) {\r\n            return result\r\n        }else {\r\n            return result\r\n        }\r\n    }\r\n\r\n    //获取考试类型\r\n    @action async getType(params: any): Promise<any> {\r\n        let result: any = await examType(params);\r\n        const { code, data, msg } = result;\r\n        if (code === 1) {\r\n            return result\r\n        }else {\r\n            return result\r\n        }\r\n    }\r\n\r\n    //获取试题类型\r\n    @action async questionType(params: any): Promise<any> {\r\n        let result: any = await getQuestionType(params);\r\n        const { code, data, msg } = result;\r\n        if (code === 1) {\r\n            return result\r\n        }else {\r\n            return result\r\n        }\r\n    }\r\n    //按条件获取试题\r\n    @action async condition(params: any): Promise<any> {\r\n        let result: any = await getCondition(params);\r\n        const { code, data, msg } = result;\r\n        if (code === 1) {\r\n            return result\r\n        }else {\r\n            return result\r\n        }\r\n    }\r\n\r\n    //添加试题类型\r\n    @action async addTypeAction(params: any) {\r\n        let result = await addType(params)\r\n        return result\r\n    }\r\n\r\n    //添加试题接口\r\n    @action async addQuestionsAction(params:any){\r\n        let result=await addQuestions(params)\r\n        return result\r\n    }\r\n\r\n    //更新试题\r\n    @action async updateQuestionAction(params:any){\r\n        let result = await updateQuestion(params)\r\n        return result\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Question;\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/question.ts","import { observable, action } from \"mobx\"\r\nimport {message} from \"antd\"\r\nimport service from '@/service/index'\r\nconst { createText,getExamList,createPaper} = service\r\n\r\n\r\nclass Text {\r\n    @observable questions:any=[]\r\n    @observable exam_exam_id:any=\"\"\r\n    @action async createTextAction(params: any) {\r\n        let result: any = await createText(params)\r\n        if (result.code === 1) {          \r\n            this.questions=result.data.questions\r\n            this.exam_exam_id=result.data.exam_exam_id\r\n            return result\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n    @action async getExamListAction(){\r\n        let result: any = await getExamList()\r\n        return result\r\n    }\r\n    @action async createPaperAction(params:any){\r\n        let id=this.exam_exam_id\r\n        let result:any=await createPaper(params,id)\r\n        return result\r\n    }\r\n  \r\n}\r\nexport default Text\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/text.ts","import { observable, action } from 'mobx'\r\n\r\nimport service from '@/service/index'\r\n\r\n\r\nconst { getTabList, addList, addUserType, setUserType, getUserIn, getViewAuthority,updateUserInfo, getIdentityView ,getUserList} = service\r\nclass User {\r\n\r\n  @observable userInfo: any = {};\r\n  @observable viewAuthority: object[] = [];\r\n  @observable userName: any = \"\"\r\n  @observable identityViews: any = []\r\n  @observable identity_text: string = \"\"\r\n  @observable nowIndetityViews: object[] = []\r\n  @observable avatar:string=''\r\n  @action async getTabAction(url: string) {\r\n    let result: any = await getTabList(url)\r\n    if (result.code === 1) {\r\n      return result;\r\n    }\r\n\r\n  }\r\n\r\n  @action async addListAction(url: string, params: any) {\r\n    let result: any = await addList(url, params)\r\n    return result;\r\n\r\n  }\r\n\r\n  //添加信息\r\n  @action async addTypeAction(url: string, params: any) {\r\n    let result: any = await addUserType(url, params)\r\n    return result\r\n  }\r\n\r\n  //设置信息\r\n  @action async setTypeAction(url: string, params: any) {\r\n    let result: any = await setUserType(url, params)\r\n    return result\r\n  }\r\n\r\n  //获取用户信息\r\n  @action async getUserInfo():Promise<any>{\r\n    let userInfo:any = await getUserIn()\r\n    this.userInfo=userInfo.data\r\n    this.avatar = userInfo.data.avatar;\r\n    this.userName = userInfo.data.user_name\r\n    this.identity_text = userInfo.data.identity_text\r\n    this.getIdentityViewAction()\r\n    this.getViewAuthority()\r\n  }\r\n  \r\n\r\n  //获取用户权限\r\n  @action async getViewAuthority(): Promise<any> {\r\n    let viewAuthority: any = await getViewAuthority();\r\n    this.viewAuthority = viewAuthority.data;\r\n  }\r\n  //更改用户信息 \r\n  @action async changeAvatar(avatar:string):Promise<any>{\r\n      this.avatar=avatar\r\n  }\r\n  //更新用户信息\r\n  @action async updateUserInfoAction(params:any):Promise<any>{\r\n    let result=await updateUserInfo(params)\r\n    return result\r\n  }\r\n  @action async getIdentityViewAction() {\r\n    let result = await getIdentityView()\r\n    //this.identityViews = result.data\r\n    let arr:any=[]\r\n     result.data.forEach((item: any) => {\r\n      if (item.identity_text == this.identity_text) {\r\n      \r\n        arr.push({ view_id: item.view_id })\r\n      //  console.log(this.nowIndetityViews)\r\n      }\r\n    })\r\n    this.nowIndetityViews=arr\r\n    return result;\r\n  }\r\n\r\n  @action async getUserList(){\r\n        let result= await getUserList()\r\n  }\r\n}\r\nexport default User;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/user.ts","\r\nexport default {\r\n    'menu.question': '试题管理',\r\n    'menu.question.addQuestion': '添加试题',\r\n    'menu.question.typeQuestion': '试题分类',\r\n    'menu.question.viewQuestion': '查看试题',\r\n    'menu.user':\"用户管理\",\r\n    'menu.user.addUser':\"添加用户\",\r\n    'menu.user.showUser':'用户展示',\r\n    'menu.exam':\"考试管理\",\r\n    'menu.exam.addExam':\"添加考试\",\r\n    'menu.exam.examList':\"试卷列表\",\r\n    'menu.class':'班级管理',\r\n    'menu.class.room':'教室管理',\r\n    'menu.class.grade':\"班级管理\",\r\n    'menu.class.student':'学生管理',\r\n    'menu.marking':\"阅卷管理\",\r\n    'menu.marking.wait':\"待批班级\"\r\n    \r\n} \r\n//班级管理、教室 班级 学生管理\r\n//阅卷管理 待批班级\n\n\n// WEBPACK FOOTER //\n// ./src/language/zh-CN.ts","export default{\r\n    'menu.question': 'QuestionManage',\r\n    'menu.question.addQuestion': 'AddQuestion',\r\n    'menu.question.typeQuestion': 'TypeQuestion',\r\n    'menu.question.viewQuestion': 'ViewQuestion',\r\n    'menu.user':\"UserManage\",\r\n    'menu.user.addUser':\"AddUser\",\r\n    'menu.user.showUser':'ViewUser',\r\n    'menu.exam':\"ExamManage\",\r\n    'menu.exam.addExam':\"AddExam\",\r\n    'menu.exam.examList':\"ExamList\",\r\n    'menu.class':'GradeManage',\r\n    'menu.class.room':'ClassroomManage',\r\n    'menu.class.grade':\"GradeManage\",\r\n    'menu.class.student':'StudentManage',\r\n    'menu.marking':\"MarkingManage\",\r\n    'menu.marking.wait':\"WateToMarking\"\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/language/en-US.ts","import * as Cookie from 'js-cookie';\r\n\r\nconst key = 'authorization';\r\n//取token\r\nexport let getToken: ()=>any = ()=>{\r\n    return Cookie.get(key);\r\n};\r\n\r\n//存token 并且设置7天免登陆\r\nexport let setToken: (val: string)=>void = (val)=>{\r\n    Cookie.set(key, val, { expires: 7 });\r\n};\r\n\r\n//移除token\r\nexport let removeToken: ()=>void = ()=>{\r\n    Cookie.remove(key);\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/util/saveToken.ts","import * as  React from 'react'\r\nimport Loadable from \"react-loadable\"\r\nfunction Loading() {\r\n    return (\r\n        <div>...Loading</div>\r\n    )\r\n}\r\n\r\nlet main = Loadable({ loading: Loading, loader: () => import(\"../views/main/main\") })\r\nlet login = Loadable({ loading: Loading, loader: () => import(\"../views/login/login\") })\r\nlet className = Loadable({ loading: Loading, loader: () => import(\"../views/main/className/class\") })\r\nlet marking = Loadable({ loading: Loading, loader: () => import(\"../views/main/marking/marking\") })\r\nlet question = Loadable({ loading: Loading, loader: () => import(\"../views/main/question/question\") })\r\nlet text = Loadable({ loading: Loading, loader: () => import(\"../views/main/text/text\") })\r\nlet user = Loadable({ loading: Loading, loader: () => import(\"../views/main/user/user\") })\r\nlet addQuestion = Loadable({ loading: Loading, loader: () => import(\"../views/main/question/addQuestion/addQuestion\") })\r\nlet showQuestion = Loadable({ loading: Loading, loader: () => import(\"../views/main/question/showQuestion/showQuestion\") })\r\nlet typeQuestion = Loadable({ loading: Loading, loader: () => import(\"../views/main/question/typeQuestion/typeQuestion\") })\r\nlet classRoom = Loadable({ loading: Loading, loader: () => import(\"../views/main/className/classRoom/classRoom\") })\r\nlet classType = Loadable({ loading: Loading, loader: () => import(\"../views/main/className/classType/classType\") })\r\nlet student = Loadable({ loading: Loading, loader: () => import(\"../views/main/className/student/student\") })\r\nlet watingClass = Loadable({ loading: Loading, loader: () => import(\"../views/main/marking/watingClass/watingClass\") })\r\nlet addText = Loadable({ loading: Loading, loader: () => import(\"../views/main/text/addText/addText\") })\r\nlet listText = Loadable({ loading: Loading, loader: () => import(\"../views/main/text/listText/listText\") })\r\nlet createTextPaper = Loadable({ loading: Loading, loader: () => import(\"../views/main/text/createTextPaper/createTextPaper\") })\r\nlet addUser = Loadable({ loading: Loading, loader: () => import(\"../views/main/user/addUser/addUser\") })\r\nlet showUser = Loadable({ loading: Loading, loader: () => import(\"../views/main/user/showUser/showUser\") })\r\nlet showDetail = Loadable({ loading: Loading, loader: () => import(\"../views/main/question/showQuestion/detail/index\") })\r\nlet classMate = Loadable({ loading: Loading, loader: () => import(\"../views/main/marking/classMate/index\") })\r\nlet editQuestion = Loadable({ loading: Loading, loader: () => import(\"../views/main/question/showQuestion/editQuestion/index\") })\r\nlet routes = [\r\n    {\r\n        component: login,\r\n        path: \"/login\"\r\n    },\r\n    {\r\n        children: [\r\n            {\r\n                \"title\": \"menu.question\",\r\n                \"type\": \"sliders\",\r\n                children: [\r\n                    {\r\n                        \"title\": \"menu.question.addQuestion\",\r\n                        \"id\": 1,\r\n                        component: addQuestion,\r\n                        view_id: \"main-addQuestions\",\r\n                        path: \"/main/question/addQuestion\"\r\n                    },\r\n                    {\r\n                        component: showDetail,\r\n                        view_id: \"main-questionsDetail\",\r\n                        path: \"/main/question/detail/:id\"\r\n                    }, {\r\n                        component: editQuestion,\r\n                        view_id: \"main-editQuestions\",\r\n                        path: \"/main/question/editQuestion/:id\"\r\n                    },\r\n                    {\r\n                        \"title\": \"menu.question.viewQuestion\",\r\n                        \"id\": 3,\r\n                        component: showQuestion,\r\n                        view_id: \"main-watchQuestions\",\r\n                        path: \"/main/question/showQuestion\"\r\n                    }, {\r\n                        \"title\": \"menu.question.typeQuestion\",\r\n                        \"id\": 2,\r\n                        component: typeQuestion,\r\n                        view_id: \"main-questionsType\",\r\n                        path: \"/main/question/typeQuestion\"\r\n                    }\r\n                ],\r\n                component: question,\r\n                path: \"/main/question\"\r\n\r\n            },\r\n            {\r\n                \"title\": \"menu.user\",\r\n                \"type\": \"team\",\r\n                children: [{\r\n                    \"title\": \"menu.user.addUser\",\r\n                    \"id\": 4,\r\n                    component: addUser,\r\n                    path: \"/main/user/addUser\",\r\n                    // view_id: \"main-addUser\"\r\n                }, {\r\n                    \"title\": \"menu.user.showUser\",\r\n                    \"id\": 5,\r\n                    component: showUser,\r\n                    path: \"/main/user/showUser\",\r\n                    // view_id: \"main-showUser\"\r\n                }],\r\n                component: user,\r\n                path: \"/main/user\"\r\n\r\n            },\r\n\r\n            {\r\n                \"title\": \"menu.exam\",\r\n                \"type\": \"schedule\",\r\n                component: text,\r\n                path: \"/main/text\",\r\n                children: [{\r\n                    \"title\": \"menu.exam.addExam\",\r\n                    \"id\": 6,\r\n                    component: addText,\r\n                    path: \"/main/text/addText\",\r\n                    // view_id: \"main-addExam\"\r\n                }, {\r\n                    \"title\": \"menu.exam.examList\",\r\n                    \"id\": 7,\r\n                    component: listText,\r\n                    // view_id: \"main-examList\",\r\n                    path: \"/main/text/listText\"\r\n                }, {\r\n                    component: createTextPaper,\r\n                    // view_id: \"main-examEdit\",\r\n                    path: \"/main/text/createTextPaper\"\r\n                }],\r\n\r\n\r\n            }, {\r\n                \"title\": \"menu.class\",\r\n                \"type\": \"project\",\r\n                children: [{\r\n                    \"title\": \"menu.class.room\",\r\n                    \"id\": 9,\r\n                    component: classRoom,\r\n                    // view_id: \"main-room\",\r\n                    path: \"/main/className/classRoom\"\r\n                },\r\n                {\r\n                    \"title\": \"menu.class.grade\",\r\n                    \"id\": 8,\r\n                    component: classType,\r\n                    // view_id: \"main-grade\",\r\n                    path: \"/main/className/classType\"\r\n                }, {\r\n                    \"title\": \"menu.class.student\",\r\n                    \"id\": 10,\r\n                    component: student,\r\n                    // view_id: \"main-student\",\r\n                    path: \"/main/className/student\"\r\n                }],\r\n                component: className,\r\n                path: \"/main/className\"\r\n\r\n            }, {\r\n                \"title\": \"menu.marking\",\r\n                \"type\": \"project\",\r\n                children: [{\r\n                    \"title\": \"menu.marking.wait\",\r\n                    \"id\": 11,\r\n                    component: watingClass,\r\n                    path: \"/main/marking/watingClass\",\r\n                    // view_id: \"main-examPaperClassmate\"\r\n                }, {\r\n                    component: classMate,\r\n                    path: \"/main/marking/classMate/:id\",\r\n                    // view_id: \"main-examPaperClassList\"\r\n                }],\r\n                component: marking,\r\n                path: \"/main/marking\",\r\n                // view_id: \"main-examinationPapers\"\r\n\r\n            }\r\n        ],\r\n        component: main,\r\n        path: \"/main\",\r\n        view_id: \"main\"\r\n    },\r\n    // }, {\r\n    //     path: \"/403\",\r\n    //     component: () => <div>403</div>\r\n    // }, {\r\n    //     path: \"/404\",\r\n    //     component: () => <div>404</div>\r\n    // },\r\n    {\r\n        from: \"/\",\r\n        to: \"/login\"\r\n    }\r\n]\r\nexport default routes\n\n\n// WEBPACK FOOTER //\n// ./src/router/routerSetting.tsx","\r\n\r\n\r\n// 集群导入  xxx.ts 文件   直接使用文件名的方式去注入   @inject('xxx')\r\nconst context = require['context']('./modules', false, /\\.ts$/);\r\n\r\nlet obj = {}\r\ncontext.keys().forEach((key: any) => {\r\n  obj[key.slice(2).slice(0, -3)] = new (context(key).default)\r\n});\r\n\r\n\r\nexport default obj\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.ts","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\r\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\r\n// We don't polyfill it in the browser--this is user's responsibility.\r\nif (process.env.NODE_ENV === 'test') {\r\n  require('raf').polyfill(global);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 431\n// module chunks = 22","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//引入mobx实例\r\nimport store from './store'\r\nimport {Provider} from 'mobx-react';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider {...store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import * as React from 'react';\r\n//引入配置路由\r\nimport RoutesView from \"./router/router\"\r\nimport { createHashHistory } from \"history\"\r\nimport { Router } from \"react-router\"\r\nimport routes from \"./router/routerSetting\"\r\nimport { inject, observer } from 'mobx-react'\r\n//引入andt样式\r\nimport 'antd/dist/antd.css';\r\n//引入导航守卫\r\nimport guardInit, { filterView } from \"./util/permission\"\r\n// 引入国际化\r\nimport { IntlProvider } from 'react-intl';\r\nimport zhCN from './language/zh-CN';\r\nimport enUS from './language/en-US';\r\nconst localeMap = {\r\n  en: enUS,\r\n  zh: zhCN\r\n}\r\n//创建一个browser router\r\nconst history = createHashHistory()\r\nguardInit(history)\r\ninterface propsInfo {\r\n  user?: any,\r\n  global?: any\r\n}\r\n@inject(\"user\", \"global\")\r\n@observer\r\nclass App extends React.Component<propsInfo> {\r\n  constructor(props: propsInfo) {\r\n    super(props)\r\n    //获取相应身份对应的权限页面\r\n    //this.props.user.getIdentityViewAction()\r\n  }\r\n  public render() {\r\n    let myRoutes:any =[];\r\n    if(this.props.user.nowIndetityViews.length){\r\n       myRoutes = filterView(routes, this.props.user.nowIndetityViews);\r\n    }\r\n    \r\n    // let nowIndetityViews=this.props.user.nowIndetityViews.length&&this.props.user.nowIndetityViews\r\n    //   console.log(this.props.user.nowIndetityViews,\"lkaslkalkla\")\r\n    \r\n    return (\r\n     <IntlProvider locale={this.props.global.locale} messages={localeMap[this.props.global.locale]}>\r\n      <Router history={history} >\r\n        <RoutesView/>\r\n      </Router>\r\n     </IntlProvider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.tsx","import * as React from \"react\"\r\nimport RouterView from \"./routerview\"\r\nimport routes from \"./routerSetting\"\r\n\r\n\r\n\r\ninterface PropsInfo{\r\n    routes?:Array<object>\r\n}\r\n\r\nclass RoutesView extends React.Component<PropsInfo> {\r\n\r\n  public render() {\r\n         //let {routes}=this.props\r\n        return (\r\n            <RouterView routes={routes}></RouterView>\r\n        )\r\n    }\r\n}\r\nexport default RoutesView\n\n\n// WEBPACK FOOTER //\n// ./src/router/router.tsx","import * as React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\ninterface PropsInfo {\r\n    routes: Array<object>\r\n}\r\n\r\n\r\nconst RouterView = (props: PropsInfo) => {\r\n\r\n    return <Switch>\r\n        {props.routes.map((item: any, index: number) => {\r\n            return item.path ? <Route key={index} path={item.path} render={(props) => {\r\n                return item.children && item.children.length ? <item.component {...props}>\r\n                    <RouterView routes={item.children} />\r\n                </item.component> : <item.component {...props}></item.component>\r\n            }}></Route> : <Redirect key={item.from} exact from={item.from} to={item.to}></Redirect>\r\n        })}\r\n    </Switch>\r\n}\r\n\r\nexport default RouterView\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/routerview.tsx","\r\n\r\nconst cont = require['context']('./model', false, /\\.ts$/);\r\n\r\nlet arr: any = cont.keys().map((key: any) =>\r\n  Object.entries(cont(key)))\r\n\r\n\r\n\r\nlet brr: any = []\r\narr.forEach((item: any) => {\r\n  brr = brr.concat(item)\r\n})\r\n\r\n\r\n\r\nconst obj = Object['fromEntries'](brr)\r\nexport default obj\n\n\n// WEBPACK FOOTER //\n// ./src/service/index.ts","import axios from 'axios';\r\nimport {AxiosResponse} from 'axios/index';\r\nimport {getToken} from \"./saveToken\";\r\nimport {message} from 'antd';\r\nconst Url={\r\n  '123.206.55.50':\"//exam.jasonandjay.com\",\r\n  '127.0.0.1':'//169.254.19.211:7001'\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: Url[window.location.host],\r\n    timeout: 1000,\r\n    headers: {'authorization': getToken()}\r\n});\r\n\r\n\r\n// 请求拦截器\r\ninstance.interceptors.request.use( (config) =>{\r\n    // Do something before request is sent\r\n    return config;\r\n  }, (error)=> {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n \r\n// 响应拦截器\r\ninstance.interceptors.response.use( (response: AxiosResponse<any>) =>{\r\n    // Do something with response data\r\n    if (response.status !== 200){\r\n      message.error(response.statusText);\r\n    }\r\n    return response.data;\r\n  },  (error) =>{\r\n    // Do something with response error\r\n    if (error.response.status && error.response.status !== 200){\r\n      message.error(error.response.statusText);\r\n    }else{\r\n      // message.error(error.response);\r\n    }\r\n    return Promise.resolve(error);\r\n  }\r\n);\r\n\r\nexport default instance;\n\n\n// WEBPACK FOOTER //\n// ./src/util/request.ts"],"sourceRoot":""}