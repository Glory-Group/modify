{"version":3,"sources":["views/main/className/classRoom/classRoom.tsx"],"names":["ClassRoom","__WEBPACK_IMPORTED_MODULE_3_antd__","Option","_super","props","_this","call","this","state","roomList","ModalText","visible","confirmLoading","columns","title","dataIndex","key","render","text","record","__WEBPACK_IMPORTED_MODULE_1_react__","onClick","delRoom","getList","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","classType","getTabAction","classRoom","_a","sent","code","data","map","item","index","setState","error","msg","showModal","delRoomAction","room_id","result","info","handleOk","e","preventDefault","form","validateFields","err","values","console","log","addListAction","history","go","setTimeout","handleCancel","prototype","getFieldDecorator","className","type","style","margin","width","height","background","onOk","onCancel","cancelText","okText","okType","Item","label","rules","required","message","prefix","color","placeholder","dataSource","__WEBPACK_IMPORTED_MODULE_2_mobx_react__","__webpack_exports__","create","name"],"mappings":"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","file":"static/js/20.ef918290.chunk.js","sourcesContent":["    import * as React from 'react'\r\n    import { inject, observer } from \"mobx-react\"\r\n    import { Table, Button, Modal, Input, Form, Icon, message, Select } from 'antd';\r\n\r\n    interface PropsInfo {\r\n        classType: any,\r\n        history: any,\r\n        form: any,\r\n    }\r\n\r\n    const { Option } = Select;\r\n\r\n    @inject('classType')\r\n    @observer\r\n\r\n    export class ClassRoom extends React.Component<PropsInfo> {\r\n        state = {\r\n            roomList: [],\r\n            ModalText: 'Content of the modal',\r\n            visible: false,\r\n            confirmLoading: false,\r\n            columns: [\r\n                {\r\n                    title: \"教室号\",\r\n                    dataIndex: 'room_text',\r\n                    key: 'room_id'\r\n                }, {\r\n                    title: \"操作\",\r\n                    key: 'action',\r\n                    render: (text: any, record: any) => (\r\n                        <span>\r\n                            <a onClick={() => { this.delRoom(text, record) }}>删除</a>\r\n                        </span>\r\n                    )\r\n\r\n                }\r\n            ]\r\n        }\r\n\r\n        getList = async () => {\r\n            let classRoom = await this.props.classType.getTabAction(\"/manger/room\")\r\n\r\n            if (classRoom.code === 1) {\r\n                classRoom.data.map((item: any, index: number) => item.key = index)\r\n                this.setState({ roomList: classRoom.data })\r\n            } else {\r\n                message.error(classRoom.msg)\r\n            }\r\n\r\n        }\r\n        showModal = () => {\r\n            this.setState({\r\n                visible: true,\r\n            });\r\n        };\r\n        delRoom = async (text: any, record: any) => {\r\n            let result = await this.props.classType.delRoomAction({ room_id: text.room_id })\r\n            if (result.code === 1) {\r\n                message.info(result.msg)\r\n                this.getList()\r\n            }\r\n        }\r\n        handleOk = (e: any) => {\r\n            e.preventDefault();\r\n\r\n            this.props.form.validateFields(async (err: any, values: any) => {\r\n                if (!err) {\r\n                    console.log(values)\r\n\r\n                    let result = await this.props.classType.addListAction(\"/manger/room\", values)\r\n                    if (result.code === 1) {\r\n                        message.info(result.msg);\r\n                        this.props.history.go(0)\r\n                        this.setState({\r\n                            confirmLoading: true,\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                visible: false,\r\n                                confirmLoading: false,\r\n                            });\r\n                        }, 2000);\r\n                    } else {\r\n                        message.error(result.msg);\r\n                    }\r\n\r\n                }\r\n            })\r\n        };\r\n        handleCancel = () => {\r\n            this.setState({\r\n                visible: false,\r\n            });\r\n        };\r\n        constructor(props: any) {\r\n            super(props)\r\n            this.getList()\r\n        }\r\n        public render() {\r\n            let { roomList, visible, confirmLoading, columns } = this.state\r\n            const { getFieldDecorator } = this.props.form;\r\n            return (\r\n                <div>\r\n                    <div className=\"title\">班级管理</div>\r\n                    <div className=\"content-box\" >\r\n                        <Button type=\"primary\" onClick={this.showModal} style={{ margin: \"10px\", width: 158, height: 40, background: \"#0139fd\" }}>\r\n                            添加教室\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"添加教室\"\r\n                            visible={visible}\r\n                            onOk={this.handleOk}\r\n                            confirmLoading={confirmLoading}\r\n                            onCancel={this.handleCancel}\r\n                            cancelText=\"取消\"\r\n                            okText=\"提交\"\r\n                            okType=\"primary\"\r\n                        >\r\n                            <Form.Item label=\"教室号\">\r\n                                {getFieldDecorator('room_text', {\r\n                                    rules: [{ required: true, message: 'Userquestions Classname!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"教室名\"\r\n                                    />\r\n                                )}\r\n                            </Form.Item>\r\n\r\n\r\n                        </Modal>\r\n                        <Table columns={columns} dataSource={roomList} />\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    export default Form.create({ name: 'classRoom' })(ClassRoom)\n\n\n// WEBPACK FOOTER //\n// ./src/views/main/className/classRoom/classRoom.tsx"],"sourceRoot":""}